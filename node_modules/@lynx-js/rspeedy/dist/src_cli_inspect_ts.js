export const __webpack_ids__ = [
    'src_cli_inspect_ts'
];
export const __webpack_modules__ = {
    "./src/cli/inspect.ts": function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__);
        __webpack_require__.d(__webpack_exports__, {
            inspect: ()=>inspect
        });
        var _rsbuild_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("@rsbuild/core");
        var _exit_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./src/cli/exit.ts");
        var _config_loadConfig_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./src/config/loadConfig.ts");
        var _create_rspeedy_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./src/create-rspeedy.ts");
        async function inspect(cwd, inspectOptions) {
            try {
                const { content: rspeedyConfig } = await (0, _config_loadConfig_js__WEBPACK_IMPORTED_MODULE_2__.ME)({
                    cwd,
                    configPath: inspectOptions.config
                });
                const rspeedy = await (0, _create_rspeedy_js__WEBPACK_IMPORTED_MODULE_3__.S)({
                    cwd,
                    rspeedyConfig,
                    ...inspectOptions.envMode ? {
                        loadEnv: {
                            mode: inspectOptions.envMode
                        }
                    } : {}
                });
                await rspeedy.inspectConfig({
                    mode: inspectOptions.mode ?? process.env['NODE_ENV'] ?? 'development',
                    verbose: inspectOptions.verbose ?? false,
                    outputPath: inspectOptions.output,
                    writeToDisk: true
                });
                return (0, _exit_js__WEBPACK_IMPORTED_MODULE_1__.exit)();
            } catch (error) {
                _rsbuild_core__WEBPACK_IMPORTED_MODULE_0__.logger.error(error);
                _rsbuild_core__WEBPACK_IMPORTED_MODULE_0__.logger.error();
            }
        }
    }
};
