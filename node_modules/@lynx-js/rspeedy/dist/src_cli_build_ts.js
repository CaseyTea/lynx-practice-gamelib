export const __webpack_ids__ = [
    'src_cli_build_ts'
];
export const __webpack_modules__ = {
    "./src/cli/build.ts": function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.r(__webpack_exports__);
        __webpack_require__.d(__webpack_exports__, {
            build: ()=>build
        });
        var _rsbuild_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("@rsbuild/core");
        var _exit_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./src/cli/exit.ts");
        var _config_loadConfig_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./src/config/loadConfig.ts");
        var _create_rspeedy_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./src/create-rspeedy.ts");
        var _utils_is_ci_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./src/utils/is-ci.ts");
        async function build(cwd, buildOptions) {
            const shouldExit = 'true' !== process.env['RSDOCTOR'] || (0, _utils_is_ci_js__WEBPACK_IMPORTED_MODULE_4__.y)();
            try {
                const { content: rspeedyConfig } = await (0, _config_loadConfig_js__WEBPACK_IMPORTED_MODULE_2__.ME)({
                    cwd,
                    configPath: buildOptions.config
                });
                const options = {
                    cwd,
                    rspeedyConfig
                };
                if (buildOptions.envMode) options.loadEnv = {
                    mode: buildOptions.envMode
                };
                if (buildOptions.environment) options.environment = buildOptions.environment;
                const rspeedy = await (0, _create_rspeedy_js__WEBPACK_IMPORTED_MODULE_3__.S)(options);
                await rspeedy.build();
            } catch (error) {
                _rsbuild_core__WEBPACK_IMPORTED_MODULE_0__.logger.error(error);
                if (shouldExit) return void (0, _exit_js__WEBPACK_IMPORTED_MODULE_1__.exit)(1);
            }
            if (shouldExit) (0, _exit_js__WEBPACK_IMPORTED_MODULE_1__.exit)();
        }
    },
    "./src/utils/is-ci.ts": function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
        __webpack_require__.d(__webpack_exports__, {
            y: ()=>isCI
        });
        function isCI() {
            return !!process.env['CI'] && 'false' !== process.env['CI'];
        }
    }
};
